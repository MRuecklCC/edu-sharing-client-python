# coding: utf-8

"""
    edu-sharing Repository REST API

    The public restful API of the edu-sharing repository.  # noqa: E501

    The version of the OpenAPI document: 1.1
    Generated by: https://openapi-generator.tech
"""

import unittest
from unittest.mock import patch

import urllib3

import edu_sharing_client
from edu_sharing_client.api.ltiv13_api import LTIV13Api  # noqa: E501
from edu_sharing_client import configuration, schemas, api_client

from . import ApiTestMixin


class TestLTIV13Api(ApiTestMixin, unittest.TestCase):
    """LTIV13Api unit test stubs"""
    _configuration = configuration.Configuration()

    def setUp(self):
        used_api_client = api_client.ApiClient(configuration=self._configuration)
        self.api = LTIV13Api(api_client=used_api_client)  # noqa: E501

    def tearDown(self):
        pass

    def test_generate_deep_linking_response(self):
        """Test case for generate_deep_linking_response

        generate DeepLinkingResponse  # noqa: E501
        """
        from edu_sharing_client.api.ltiv13_api_endpoints import generate_deep_linking_response as endpoint_module
        response_status = 200
        # TODO get response content working
        pass

    def test_jwks_uri(self):
        """Test case for jwks_uri

        LTI - returns repository JSON Web Key Sets  # noqa: E501
        """
        from edu_sharing_client.api.ltiv13_api_endpoints import jwks_uri as endpoint_module
        response_status = 200
        # TODO get response content working
        pass

    def test_login_initiations(self):
        """Test case for login_initiations

        lti authentication process preparation.  # noqa: E501
        """
        from edu_sharing_client.api.ltiv13_api_endpoints import login_initiations as endpoint_module
        response_status = 200
        # TODO get response content working

    def test_lti(self):
        """Test case for lti

        lti tool redirect.  # noqa: E501
        """
        from edu_sharing_client.api.ltiv13_api_endpoints import lti as endpoint_module
        response_status = 200
        # TODO get response content working

    def test_lti_registration_dynamic(self):
        """Test case for lti_registration_dynamic

        LTI Dynamic Registration - Initiate registration  # noqa: E501
        """
        from edu_sharing_client.api.ltiv13_api_endpoints import lti_registration_dynamic as endpoint_module
        response_status = 200
        # TODO get response content working
        pass

    def test_lti_registration_url(self):
        """Test case for lti_registration_url

        LTI Dynamic Registration - generates url for platform  # noqa: E501
        """
        from edu_sharing_client.api.ltiv13_api_endpoints import lti_registration_url as endpoint_module
        response_status = 200
        # TODO get response content working
        pass

    def test_lti_target(self):
        """Test case for lti_target

        lti tool resource link target.  # noqa: E501
        """
        from edu_sharing_client.api.ltiv13_api_endpoints import lti_target as endpoint_module
        response_status = 200
        # TODO get response content working

    def test_register_by_type(self):
        """Test case for register_by_type

        register LTI platform  # noqa: E501
        """
        from edu_sharing_client.api.ltiv13_api_endpoints import register_by_type as endpoint_module
        response_status = 200
        # TODO get response content working
        pass

    def test_register_test(self):
        """Test case for register_test

        register LTI platform  # noqa: E501
        """
        from edu_sharing_client.api.ltiv13_api_endpoints import register_test as endpoint_module
        response_status = 200
        # TODO get response content working
        pass

    def test_remove_lti_registration_url(self):
        """Test case for remove_lti_registration_url

        LTI Dynamic Regitration - delete url  # noqa: E501
        """
        from edu_sharing_client.api.ltiv13_api_endpoints import remove_lti_registration_url as endpoint_module
        response_status = 200
        # TODO get response content working
        pass


if __name__ == '__main__':
    unittest.main()
